<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MyStock" xml:space="preserve">
    <value>Mein Vorrat</value>
  </data>
  <data name="ExpiringSoon" xml:space="preserve">
    <value>Läuft bald ab</value>
  </data>
  <data name="ExpiresToday" xml:space="preserve">
    <value>Läuft heute ab</value>
  </data>
  <data name="Expired" xml:space="preserve">
    <value>Abgelaufen</value>
  </data>
  <data name="MyStorageLocations" xml:space="preserve">
    <value>Meine Lagerorte</value>
  </data>
  <data name="NoDataTitle" xml:space="preserve">
    <value>Oh, hier sieht es noch ganz leer aus!</value>
  </data>
  <data name="NoDataDescription" xml:space="preserve">
    <value>Du hast noch keine Orte, wie z.B. einen Kühlschrank oder einen Vorratsschrank, in der App gespeichert, wo du deine Lebensmittel aufbewahren kannst.</value>
  </data>
  <data name="GetStarted" xml:space="preserve">
    <value>Los geht's!</value>
  </data>
  <data name="StartWithSuggestedLocations" xml:space="preserve">
    <value>Mit vorgeschlagenen Orten starten</value>
  </data>
  <data name="SuggestedLocationsDescription" xml:space="preserve">
    <value>Wir legen ein paar Orte wie 'Kühlschrank' und 'Vorratsschrank' für dich an, damit du direkt loslegen kannst! Du kannst die Orte später natürlich auch umbenennen oder löschen.</value>
  </data>
  <data name="StartWithSuggestedLocationsAndStock" xml:space="preserve">
    <value>Mit vorgeschlagenen Orten und Lebensmitteln starten</value>
  </data>
  <data name="SuggestedLocationsAndStockDescription" xml:space="preserve">
    <value>Hier fügen wir nicht nur Orte wie 'Kühlschrank' hinzu, sondern auch einige Lebensmittel, damit du siehst, wie alles funktioniert! Du kannst die Orte und Lebensmittel später natürlich auch umbenennen oder löschen.</value>
  </data>
  <data name="CreateNewLocationLinkText" xml:space="preserve">
    <value>Selbst einen neuen Ort anlegen</value>
  </data>
  <data name="CreateNewLocationDescription" xml:space="preserve">
    <value>Erstelle deinen eigenen Ort, wie z.B. deinen Kühlschrank, um zu beginnen.</value>
  </data>
  <data name="AddEntry" xml:space="preserve">
    <value>Eintrag hinzufügen</value>
  </data>
  <data name="CreateNewLocation" xml:space="preserve">
    <value>Neuen Ort anlegen</value>
  </data>
  <data name="XItems" xml:space="preserve">
    <value>{0} Einträge</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Don't let me expire</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="DeleteImage" xml:space="preserve">
    <value>Bild löschen</value>
  </data>
  <data name="TapToAddImage" xml:space="preserve">
    <value>Tippe hier, um ein Bild hinzuzufügen</value>
  </data>
  <data name="ErrorsHeader" xml:space="preserve">
    <value>Es gibt einige Fehler!</value>
  </data>
  <data name="ErrorsSubHeader" xml:space="preserve">
    <value>Korrigiere sie unten und versuche es erneut.</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="StorageLocation" xml:space="preserve">
    <value>Lagerort</value>
  </data>
  <data name="ExpirationDate" xml:space="preserve">
    <value>Verfallsdatum</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Menge</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Speichern</value>
  </data>
  <data name="Today" xml:space="preserve">
    <value>Heute</value>
  </data>
  <data name="Tomorrow" xml:space="preserve">
    <value>Morgen</value>
  </data>
  <data name="Yesterday" xml:space="preserve">
    <value>Gestern</value>
  </data>
  <data name="LastWeek" xml:space="preserve">
    <value>Letzte Woche</value>
  </data>
  <data name="XDaysAgo" xml:space="preserve">
    <value>Vor {0} Tagen</value>
  </data>
  <data name="InXDays" xml:space="preserve">
    <value>In {0} Tagen</value>
  </data>
  <data name="NextWeek" xml:space="preserve">
    <value>Nächste Woche</value>
  </data>
  <data name="InTwoWeeks" xml:space="preserve">
    <value>In zwei Wochen</value>
  </data>
  <data name="InThreeWeeks" xml:space="preserve">
    <value>In drei Wochen</value>
  </data>
  <data name="InMoreThanAMonth" xml:space="preserve">
    <value>In über einem Monat</value>
  </data>
  <data name="RequiredErrorMessage" xml:space="preserve">
    <value>Das Feld {0} ist erforderlich.</value>
  </data>
  <data name="RangeErrorMessage" xml:space="preserve">
    <value>Der Wert für das Feld {0} muss zwischen {1} und {2} liegen.</value>
  </data>
  <data name="LengthErrorMessage" xml:space="preserve">
    <value>Die Länge des Feldes {0} muss zwischen {1} und {2} liegen.</value>
  </data>
  <data name="NewEntry" xml:space="preserve">
    <value>Neuer Eintrag</value>
  </data>
  <data name="SearchBarcode" xml:space="preserve">
    <value>Barcode suchen</value>
  </data>
  <data name="Ok" xml:space="preserve">
	  <value>Ok</value>
  </data>
  <data name="German" xml:space="preserve">
	  <value>Deutsch</value>
  </data>
  <data name="Language" xml:space="preserve">
	  <value>Sprache</value>
  </data>
  <data name="Light" xml:space="preserve">
	  <value>Hell</value>
  </data>
  <data name="ResetAppWarnining" xml:space="preserve">
	  <value>Das Zurücksetzen der App wird alle Ihre Daten löschen, einschließlich Orten, Beständen und allen benutzerdefinierten Einstellungen. Diese Aktion kann nicht rückgängig gemacht werden. Sind Sie sicher, dass Sie fortfahren möchten?</value>
  </data>
  <data name="ResetApp" xml:space="preserve">
	  <value>App zurücksetzen</value>
  </data>
  <data name="RestartApp" xml:space="preserve">
	  <value>App neu starten</value>
  </data>
  <data name="PleaseRestart" xml:space="preserve">
	  <value>Bitte starten Sie die App neu!</value>
  </data>
  <data name="RestartAppLanguageChange" xml:space="preserve">
	  <value>Bitte starten Sie die App neu, um die Sprachänderung anzuwenden</value>
  </data>
  <data name="Theme" xml:space="preserve">
	  <value>Theme</value>
  </data>
  <data name="Dark" xml:space="preserve">
	  <value>Dunkel</value>
  </data>
  <data name="Cancel" xml:space="preserve">
	  <value>Abbrechen</value>
  </data>
  <data name="Default" xml:space="preserve">
	  <value>(Standard)</value>
  </data>
  <data name="English" xml:space="preserve">
	  <value>Englisch</value>
  </data>
  <data name="Warning" xml:space="preserve">
	  <value>Warnung</value>
  </data>
</root>